#################################################################################
#  Copyright (c) 2025 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: kafka-producer
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# Application configuration organized by logical groups
application:
  # Kafka Configuration
  kafka:
    bootstrapServers: "{{ .Release.Name }}-kafka-controller-0-external:9095"
    securityProtocol: "SASL_SSL"
    topics:
      productionForecast: "kafka-production-forecast-topic"
      productionTracking: "kafka-production-tracking-topic"
      stream: "kafka-stream-topic"
    ssl:
      truststoreLocation: "/certs/kafka.server.truststore.jks"
      truststorePassword: "kafka123"
      endpointIdentificationAlgorithm: ""
      truststoreType: "JKS"

  # Authentication Configuration
  authentication:
    oauth2:
      clientId: "myclient"
      tokenUrl: "http://{{ .Release.Name }}-keycloak:80/realms/kafka/protocol/openid-connect/token"
      revokeUrl: "http://{{ .Release.Name }}-keycloak:80/realms/kafka/protocol/openid-connect/revoke"
  
  # EDC Configuration
  edc:
    managementUrl: "http://{{ .Release.Name }}-edc:8081/management"
    assets:
      stream: "kafka-stream-asset"
      forecast: "kafka-forecast-asset"
      tracking: "kafka-tracking-asset"

# Secrets configuration for sensitive data
# When secrets.create is true, sensitive values will be stored in Kubernetes secrets
# and referenced via secretKeyRef in the deployment
secrets:
  # Specifies whether secrets should be created by this chart
  create: true

  # External secret name - defaults to chart-created name but can be overridden
  # Empty = use default: {{ include "producer-app.fullname" . }}-secrets
  # For external secrets: specify the external secret name and set create: false
  # 
  # Examples:
  # Internal secrets (managed by this chart):
  #   secretName: ""
  #   create: true
  #
  # External secrets (managed outside this chart):
  #   secretName: "my-external-secret"
  #   create: false
  #   Note: External secret must contain keys: oauth2-client-secret, client-secret-vault-key, edc-api-auth-key
  secretName: ""

  # Sensitive configuration values (will be base64 encoded in the secret)
  # Only used when create: true
  oauth2ClientSecret: "mysecret"
  clientSecretVaultKey: "secretKey"
  edcApiAuthKey: "password"

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  # Set to false for security hardening as producer-app doesn't need K8s API access
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  fsGroup: 10100

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10100
  runAsGroup: 10100
  allowPrivilegeEscalation: false

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
# Note: producer-app doesn't expose HTTP endpoints, so service is optional
service:
  enabled: false
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

resources:
  limits:
    cpu: 150m
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 256Mi

# Health checks are disabled since producer-app doesn't expose HTTP endpoints
# The application runs continuously and produces messages to Kafka
livenessProbe:
  enabled: false

readinessProbe:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}

# Restart policy for the deployment
restartPolicy: Always

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

customCACerts:
  enabled: false
  secretName: kafka-pem
  emptyDirSize: 1Mi
