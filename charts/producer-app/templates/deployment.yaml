#################################################################################
#  Copyright (c) 2025 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "producer-app.fullname" . }}
  labels:
    {{- include "producer-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "producer-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "producer-app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "producer-app.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.customCACerts.enabled }}
      initContainers:
        - name: custom-cacerts
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              cp /opt/java/openjdk/lib/security/cacerts /workdir/
              find /cacerts -type f \( -iname \*.crt -o -iname \*.pem \) -exec echo "{}" \; | while read PEM_FILE_PATH; do
                PEM_FILE=${PEM_FILE_PATH##*/}
                ALIAS=${PEM_FILE%.*}
                echo "adding ${PEM_FILE} with alias ${ALIAS} to cacerts ..."
                keytool -import -noprompt -trustcacerts -alias ${ALIAS} -file ${PEM_FILE_PATH} -keystore /workdir/cacerts -storepass changeit
              done
          securityContext:
                {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: custom-cacertificates
              mountPath: /cacerts
            - name: custom-cacerts
              mountPath: /workdir
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            # Kafka Configuration
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ tpl .Values.application.kafka.bootstrapServers . | quote }}
            - name: KAFKA_PRODUCTION_FORECAST_TOPIC
              value: {{ .Values.application.kafka.topics.productionForecast | quote }}
            - name: KAFKA_PRODUCTION_TRACKING_TOPIC
              value: {{ .Values.application.kafka.topics.productionTracking | quote }}
            - name: KAFKA_STREAM_TOPIC
              value: {{ .Values.application.kafka.topics.stream | quote }}
            {{- if .Values.application.kafka.securityProtocol }}
            - name: KAFKA_SECURITY_PROTOCOL
              value: {{ .Values.application.kafka.securityProtocol | quote }}
            {{- end }}
            {{- if .Values.application.kafka.ssl }}
            - name: KAFKA_SSL_TRUSTSTORE_LOCATION
              value: {{ .Values.application.kafka.ssl.truststoreLocation | quote }}
            - name: KAFKA_SSL_TRUSTSTORE_PASSWORD
              value: {{ .Values.application.kafka.ssl.truststorePassword | quote }}
            - name: KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
              value: {{ .Values.application.kafka.ssl.endpointIdentificationAlgorithm | quote }}
            {{- end }}
            {{- if .Values.application.kafka.securityProtocol }}
            - name: SECURITY_PROTOCOL
              value: {{ .Values.application.kafka.securityProtocol | quote }}
            {{- end }}
            {{- if .Values.application.kafka.ssl }}
            - name: SSL_TRUSTSTORE_LOCATION
              value: {{ .Values.application.kafka.ssl.truststoreLocation | quote }}
            - name: SSL_TRUSTSTORE_TYPE
              value: {{ .Values.application.kafka.ssl.truststoreType | quote }}
            - name: SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
              value: {{ .Values.application.kafka.ssl.endpointIdentificationAlgorithm | quote }}
            {{- end }}
            # Authentication Configuration
            - name: KEYCLOAK_CLIENT_ID
              value: {{ .Values.application.authentication.oauth2.clientId | quote }}
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "producer-app.secretName" . }}
                  key: oauth2-client-secret
            - name: KEYCLOAK_TOKEN_URL
              value: {{ tpl .Values.application.authentication.oauth2.tokenUrl . | quote }}
            - name: KEYCLOAK_REVOKE_URL
              value: {{ tpl .Values.application.authentication.oauth2.revokeUrl . | quote }}
            - name: VAULT_CLIENT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "producer-app.secretName" . }}
                  key: client-secret-vault-key
            # EDC Configuration
            - name: ASSET_ID
              value: {{ .Values.application.edc.assets.stream | quote }}
            - name: FORECAST_ASSET_ID
              value: {{ .Values.application.edc.assets.forecast | quote }}
            - name: TRACKING_ASSET_ID
              value: {{ .Values.application.edc.assets.tracking | quote }}
            - name: EDC_API_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "producer-app.secretName" . }}
                  key: edc-api-auth-key
            - name: EDC_MANAGEMENT_URL
              value: {{ tpl .Values.application.edc.managementUrl . | quote }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.customCACerts.enabled }}
            - name: custom-cacerts
              mountPath: /opt/java/openjdk/lib/security/cacerts
              subPath: cacerts
            {{- end }}
      volumes:
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.customCACerts.enabled }}
        - name: custom-cacertificates
          secret:
            secretName: {{ tpl (required "customCACerts.secretName must be set" .Values.customCACerts.secretName) . | quote }}
            defaultMode: 0400
        - name: custom-cacerts
          emptyDir:
            sizeLimit: {{ .Values.customCACerts.emptyDirSize | default "1Mi" }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.restartPolicy }}