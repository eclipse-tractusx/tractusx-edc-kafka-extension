1. Get the application name by running these commands:
{{- if .Values.fullnameOverride }}
  export APP_NAME={{ .Values.fullnameOverride }}
{{- else }}
  export APP_NAME={{ include "producer-app.fullname" . }}
{{- end }}

2. The Kafka Producer application has been deployed successfully!

3. To check the status of your deployment, run:
   kubectl get deployment $APP_NAME -n {{ .Release.Namespace }}

4. To view the logs of the Kafka Producer, run:
   kubectl logs -f deployment/$APP_NAME -n {{ .Release.Namespace }}

5. To check the pods, run:
   kubectl get pods -l "app.kubernetes.io/name={{ include "producer-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -n {{ .Release.Namespace }}

6. Configuration Summary:
   - Kafka Bootstrap Servers: {{ tpl .Values.env.kafkaBootstrapServers . }}
   - Forecast Topic: {{ .Values.env.kafkaProductionForecastTopic }}
   - Tracking Topic: {{ .Values.env.kafkaProductionTrackingTopic }}
   - EDC Management URL: {{ tpl .Values.env.edcManagementUrl . }}

7. The application will continuously produce messages to the configured Kafka topics.
   Monitor the logs to see the message production activity.

{{- if .Values.service.enabled }}
8. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "producer-app.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "producer-app.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "producer-app.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "producer-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
{{- else }}
8. Note: Service is disabled for this deployment as the Kafka Producer doesn't expose HTTP endpoints.
{{- end }}