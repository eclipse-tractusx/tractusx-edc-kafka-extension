#################################################################################
#  Copyright (c) 2025 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################

tractusx-connector:
  install:
    postgresql: true
    vault: true

  participant:
    id: "BPNLCHANGEME"

  iatp:
    id: "did:web:changeme"
    trustedIssuers: []
    sts:
      dim:
        url:
      oauth:
        token_url:
        client:
          id:
          secret_alias:

  controlplane:
    image:
      # override the edc docker image with the kafka extension image
      repository: "tractusx/edc-controlplane-kafka"
      pullPolicy: IfNotPresent
      tag: "test"

    endpoints:
      management:
        port: 8081
        path: /management
        authKey: "password"
      protocol:
        port: 8084
        path: /api/v1/dsp
    bdrs:
      server:
        url:

    # -- Extra environment variables that will be pass onto deployment pods
    env: {}
    #  ENV_NAME: value

    ingresses:
      - enabled: false
        hostname: "edc-control.local"
        annotations: {}
        endpoints:
          - protocol
        className: ""
        tls:
          enabled: false
          secretName: ""
        certManager:
          issuer: ""
          clusterIssuer: ""
      - enabled: false
        hostname: "edc-control.intranet"
        annotations: {}
        endpoints:
          - management
          - control
        className: ""
        tls:
          enabled: false
          secretName: ""
        certManager:
          issuer: ""
          clusterIssuer: ""

  dataplane:
    token:
      refresh:
        expiry_seconds: 300
        expiry_tolerance_seconds: 10
        refresh_endpoint:
      signer:
        privatekey_alias:
      verifier:
        publickey_alias:

    ingresses:
      - enabled: false
        hostname: "edc-data.local"
        annotations: {}
        endpoints:
          - public
        className: ""
        tls:
          secretName: ""
        certManager:
          issuer: ""
          clusterIssuer: ""

    resources:
      limits:
        cpu: 1.5
        memory: 1024Mi
      requests:
        cpu: 500m
        memory: 1024Mi
    url:
      public: ""

  postgresql:
    jdbcUrl: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/edc"
    primary:
      persistence:
        enabled: false
    readReplicas:
      persistence:
        enabled: false
    auth:
      database: "edc"
      username: "user"
      password: "password"

  vault:
    injector:
      enabled: false
    server:
      dev:
        enabled: true
        devRootToken: "root"
      postStart:    # must be set externally!
    hashicorp:
      url: "http://{{ .Release.Name }}-vault:8200"
      token: "root"
      timeout: 30
      healthCheck:
        enabled: true
        standbyOk: true
      paths:
        secret: /v1/secret
        health: /v1/sys/health
        folder: ""
