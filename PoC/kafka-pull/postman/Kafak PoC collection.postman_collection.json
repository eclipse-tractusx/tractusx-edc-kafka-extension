{
	"info": {
		"_postman_id": "f5a1c8ab-6490-479b-bf71-281bc7746e2a",
		"name": "Kafak PoC collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "38297939"
	},
	"item": [
		{
			"name": "Provider",
			"item": [
				{
					"name": "kafka",
					"item": [
						{
							"name": "Create asset",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@id\": \"{{ASSET_ID}}\",\r\n    \"properties\": {\r\n    \"name\": \"test asset\",\r\n    \"contenttype\": \"application/json\"\r\n  },\r\n    \"dataAddress\": {\r\n        \"type\": \"KafkaBroker\",\r\n        \"name\": \"test asset\",\r\n        \"kafka.bootstrap.servers\": \"{{KAFKA_URL}}\",\r\n        \"topic\": \"{{KAFKA_TOPIC}}\",\r\n        //\"pollDuration\": \"PT5M\", \r\n        \"secretKey\": \"{{KAFKA_SECRET}}\",\r\n        \"kafka.sasl.mechanism\": \"{{KAFKA_SASL_MECHANISM}}\",\r\n        \"kafka.security.protocol\": \"{{KAFKA_SECURITY_PROTOCOL}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/assets"
							},
							"response": []
						},
						{
							"name": "Create policy definition",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"@context\": {\r\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\r\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\r\n  },\r\n  \"@id\": \"no-constraint-policy\",\r\n  \"policy\": {\r\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\r\n    \"@type\": \"Set\",\r\n    \"permission\": [],\r\n    \"prohibition\": [],\r\n    \"obligation\": []\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/policydefinitions"
							},
							"response": []
						},
						{
							"name": "Create contract definition",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@id\": \"contract-definition\",\r\n    \"accessPolicyId\": \"no-constraint-policy\",\r\n    \"contractPolicyId\": \"no-constraint-policy\",\r\n    \"assetsSelector\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/contractdefinitions"
							},
							"response": []
						},
						{
							"name": "Terminate transfer process",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"@context\": {\r\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n  },\r\n  \"@type\": \"https://w3id.org/edc/v0.0.1/ns/TerminateTransfer\",\r\n  \"reason\": \"a reason to terminate\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/transferprocesses/{{PROVIDER_TRANSFER_ID}}/terminate",
								"description": "```\ninsert id from 'initiate transfer'\n\n ```"
							},
							"response": []
						},
						{
							"name": "Suspend transfer process",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"@context\": {\r\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n  },\r\n  \"@type\": \"https://w3id.org/edc/v0.0.1/ns/SuspendTransfer\",\r\n  \"reason\": \"a reason to suspend\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/transferprocesses/{{PROVIDER_TRANSFER_ID}}/suspend",
								"description": "```\ninsert id from 'initiate transfer'\n\n ```"
							},
							"response": []
						},
						{
							"name": "Resume transfer process",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{PROVIDER_MANAGEMENT_URL}}/v3/transferprocesses/{{PROVIDER_TRANSFER_ID}}/resume",
								"description": "```\ninsert id from 'initiate transfer'\n\n ```"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Consumer",
			"item": [
				{
					"name": "kafka",
					"item": [
						{
							"name": "Get dataset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Get dataset \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"OFFER_ID\", jsonData[\"odrl:hasPolicy\"][\"@id\"]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"DatasetRequest\",\r\n    \"@id\": \"{{ASSET_ID}}\",\r\n    \"counterPartyAddress\": \"{{PROVIDER_PROTOCOL_URL}}\",\r\n    \"protocol\": \"dataspace-protocol-http\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{CONSUMER_MANAGEMENT_URL}}/v3/catalog/dataset/request"
							},
							"response": []
						},
						{
							"name": "Initiate Negotiation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Initiated Negotiation\", function () {\r",
											"  pm.collectionVariables.set(\"NEGOTIATION_ID\", jsonData[\"@id\"]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"@context\": {\r\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\r\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\r\n  },\r\n  \"@type\": \"ContractRequest\",\r\n  \"counterPartyAddress\": \"{{PROVIDER_PROTOCOL_URL}}\",\r\n  \"protocol\": \"dataspace-protocol-http\",\r\n  \"policy\": {\r\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\r\n    \"@id\": \"{{OFFER_ID}}\",\r\n    \"@type\": \"Offer\",\r\n    \"assigner\": \"{{PROVIDER_ID}}\",\r\n    \"target\": \"test\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{CONSUMER_MANAGEMENT_URL}}/v3/contractnegotiations"
							},
							"response": []
						},
						{
							"name": "Get Negotiation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Get Negotiation \", function () {\r",
											"   pm.expect(jsonData[\"state\"]).to.eql(\"FINALIZED\");\r",
											"   pm.collectionVariables.set(\"CONTRACT_AGREEMENT_ID\", jsonData[\"contractAgreementId\"]);\r",
											"  \r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{CONSUMER_MANAGEMENT_URL}}/v3/contractnegotiations/{{NEGOTIATION_ID}}",
								"description": "```\ninsert id from 'initiate negotiation'\n\n ```"
							},
							"response": []
						},
						{
							"name": "Kafka PULL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Kafka PULL\" , function () {\r",
											"  pm.collectionVariables.set(\"CONSUMER_TRANSFER_ID\", jsonData[\"@id\"]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"@context\": {\r\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n  },\r\n  \"@type\": \"TransferRequest\",\r\n  \"protocol\": \"dataspace-protocol-http\",\r\n  \"assetId\": \"{{ASSET_ID}}\",\r\n  \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\r\n  \"connectorId\": \"{{PROVIDER_ID}}\",\r\n  \"transferType\": \"Kafka-PULL\",\r\n  \"counterPartyAddress\": \"{{PROVIDER_PROTOCOL_URL}}\",\r\n  \"dataDestination\": {\r\n    \"type\": \"KafkaBroker\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{CONSUMER_MANAGEMENT_URL}}/v3/transferprocesses",
								"description": "```\ninsert contract id from 'get negotiation'\n\n ```"
							},
							"response": []
						},
						{
							"name": "Get transfer process",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Get transfer process\" , function () {\r",
											"  pm.collectionVariables.set(\"PROVIDER_TRANSFER_ID\", jsonData[\"@id\"]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{CONSUMER_MANAGEMENT_URL}}/v3/transferprocesses/{{CONSUMER_TRANSFER_ID}}",
								"description": "```\ninsert id from 'initiate transfer'\n\n ```"
							},
							"response": []
						},
						{
							"name": "Get EDR",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{CONSUMER_MANAGEMENT_URL}}/v2/edrs/{{CONSUMER_TRANSFER_ID}}/dataaddress",
								"description": "```\n[only for pull transfer] Get EDR (insert id from 'initiate transfer')\n\n ```"
							},
							"response": []
						},
						{
							"name": "Terminate transfer process",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"@context\": {\r\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n  },\r\n  \"@type\": \"https://w3id.org/edc/v0.0.1/ns/TerminateTransfer\",\r\n  \"reason\": \"a reason to terminate\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{CONSUMER_MANAGEMENT_URL}}/v3/transferprocesses/{{CONSUMER_TRANSFER_ID}}/terminate",
								"description": "```\ninsert id from 'initiate transfer'\n\n ```"
							},
							"response": []
						},
						{
							"name": "Suspend transfer process",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"@context\": {\r\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n  },\r\n  \"@type\": \"https://w3id.org/edc/v0.0.1/ns/SuspendTransfer\",\r\n  \"reason\": \"a reason to suspend\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{CONSUMER_MANAGEMENT_URL}}/v3/transferprocesses/{{CONSUMER_TRANSFER_ID}}/suspend",
								"description": "```\ninsert id from 'initiate transfer'\n\n ```"
							},
							"response": []
						},
						{
							"name": "Resume transfer process",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{CONSUMER_MANAGEMENT_URL}}/v3/transferprocesses/{{CONSUMER_TRANSFER_ID}}/resume",
								"description": "```\ninsert id from 'initiate transfer'\n\n ```"
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": {
			"key": "X-API-KEY",
			"value": "{{API_KEY_PASSWORD}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "API_KEY_PASSWORD",
			"value": "password",
			"type": "string"
		},
		{
			"key": "PROVIDER_PROTOCOL_URL",
			"value": "http://control-plane-alice:8282/protocol",
			"type": "string"
		},
		{
			"key": "CONSUMER_MANAGEMENT_URL",
			"value": "http://localhost:9191/management",
			"type": "string"
		},
		{
			"key": "PROVIDER_MANAGEMENT_URL",
			"value": "http://localhost:8181/management",
			"type": "string"
		},
		{
			"key": "PROVIDER_ID",
			"value": "alice",
			"type": "string"
		},
		{
			"key": "ASSET_ID",
			"value": "kafka-stream-asset",
			"type": "string"
		},
		{
			"key": "KAFKA_URL",
			"value": "kafka-kraft:9093",
			"type": "string"
		},
		{
			"key": "KAFKA_SECRET",
			"value": "secretKey",
			"type": "string"
		},
		{
			"key": "KAFKA_SASL_MECHANISM",
			"value": "SCRAM-SHA-256",
			"type": "string"
		},
		{
			"key": "KAFKA_SECURITY_PROTOCOL",
			"value": "SASL_PLAINTEXT",
			"type": "string"
		},
		{
			"key": "KAFKA_TOPIC",
			"value": "kafka-stream-topic",
			"type": "string"
		},
		{
			"key": "NEGOTIATION_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "CONTRACT_AGREEMENT_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "CONSUMER_TRANSFER_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "PROVIDER_TRANSFER_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "OFFER_ID",
			"value": "",
			"type": "string"
		}
	]
}